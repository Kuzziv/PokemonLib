<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PokemonGameLib</name>
    </assembly>
    <members>
        <member name="T:PokemonGameLib.Commands.AttackCommand">
            <summary>
            Represents an attack command in a Pokémon battle.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Commands.BattleCommand">
            <summary>
            Represents a command in a Pokémon battle.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Commands.BattleCommand.Execute">
            <summary>
            Executes the command.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Commands.SwitchCommand">
            <summary>
            Represents a switch Pokémon command in a Pokémon battle.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Commands.UseItemCommand">
            <summary>
            Represents a use item command in a Pokémon battle.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Exceptions.InvalidMoveException">
            <summary>
            Exception thrown when an invalid move is attempted in a Pokémon battle.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Exceptions.InvalidMoveException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Exceptions.InvalidMoveException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:PokemonGameLib.Exceptions.InvalidMoveException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Exceptions.InvalidMoveException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:PokemonGameLib.Exceptions.InvalidPokemonSwitchException">
            <summary>
            Exception thrown when an invalid Pokémon switch is attempted.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Exceptions.InvalidPokemonSwitchException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Exceptions.InvalidPokemonSwitchException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:PokemonGameLib.Exceptions.InvalidPokemonSwitchException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Exceptions.InvalidPokemonSwitchException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:PokemonGameLib.Exceptions.ItemNotFoundException">
            <summary>
            Exception thrown when an item is not found in the trainer's inventory.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Exceptions.ItemNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Exceptions.ItemNotFoundException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:PokemonGameLib.Exceptions.ItemNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Exceptions.ItemNotFoundException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:PokemonGameLib.Exceptions.PokemonFaintedException">
            <summary>
            Exception thrown when a Pokémon that has fainted is attempted to be used in battle.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Exceptions.PokemonFaintedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Exceptions.PokemonFaintedException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:PokemonGameLib.Exceptions.PokemonFaintedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Exceptions.PokemonFaintedException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:PokemonGameLib.Interfaces.IBattle">
            <summary>
            Represents a battle between two trainers in the Pokémon game.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IBattle.CurrentTrainer">
            <summary>
            Gets the current trainer whose turn it is.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IBattle.OpponentTrainer">
            <summary>
            Gets the opponent trainer in the current battle.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IBattle.StartBattle">
            <summary>
            Starts the battle between the two trainers.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IBattle.PerformAttack(PokemonGameLib.Interfaces.IMove)">
            <summary>
            Executes an attack using the specified move.
            </summary>
            <param name="move">The move to be used in the attack.</param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IBattle.PerformSwitch(PokemonGameLib.Interfaces.ITrainer,PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Switches the current Pokémon with the specified new Pokémon.
            </summary>
            <param name="newPokemon">The new Pokémon to switch to.</param>
            <param name="trainer">The trainer who is switching Pokémon.</param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IBattle.PerformUseItem(PokemonGameLib.Interfaces.IItem,PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Uses the specified item on the target Pokémon.
            </summary>
            <param name="item">The item to be used.</param>
            <param name="targetPokemon">The target Pokémon to use the item on.</param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IBattle.SwitchTurns">
            <summary>
            Switches the turn to the other trainer.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IBattle.IsBattleOver">
            <summary>
            Determines whether the battle is over.
            </summary>
            <returns>True if the battle is over; otherwise, false.</returns>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IBattle.GetWinner">
            <summary>
            Gets the winner of the battle.
            </summary>
            <returns>The winning trainer.</returns>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IBattle.DetermineBattleResult">
            <summary>
            Determines the result of the battle.
            </summary>
            <returns>A string representing the result of the battle.</returns>
        </member>
        <member name="T:PokemonGameLib.Interfaces.ICommand">
            <summary>
            Represents a command that can be executed within the game.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Interfaces.IEvolution">
            <summary>
            Represents a Pokémon evolution condition, determining when a Pokémon can evolve.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IEvolution.EvolvedFormName">
            <summary>
            Gets the name of the evolved form.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IEvolution.RequiredLevel">
            <summary>
            Gets the level required for the evolution to occur.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IEvolution.CanEvolve(PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Determines if a Pokémon can evolve based on its level.
            </summary>
            <param name="pokemon">The Pokémon to check.</param>
            <returns><c>true</c> if the Pokémon can evolve; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:PokemonGameLib.Interfaces.IItem">
            <summary>
            Represents an item that can be used in battles to affect Pokémon or trainers.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IItem.Name">
            <summary>
            Gets the name of the item.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IItem.Description">
            <summary>
            Gets the description of the item.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IItem.Use(PokemonGameLib.Interfaces.ITrainer,PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Uses the item on a target Pokémon.
            </summary>
            <param name="trainer">The trainer using the item.</param>
            <param name="target">The target Pokémon.</param>
        </member>
        <member name="T:PokemonGameLib.Interfaces.ILogger">
            <summary>
            Represents a logger that can be used to log messages to the console.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.ILogger.LogInfo(System.String)">
            <summary>
            Logs an informational message to the console.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.ILogger.LogWarning(System.String)">
            <summary>
            Logs a warning message to the console.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.ILogger.LogError(System.String)">
            <summary>
            Logs an error message to the console.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:PokemonGameLib.Interfaces.IMove">
            <summary>
            Represents a move that a Pokémon can use in battle, defining its properties and special effects.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IMove.Name">
            <summary>
            Gets the name of the move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IMove.Type">
            <summary>
            Gets the type of the move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IMove.Power">
            <summary>
            Gets the power of the move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IMove.Level">
            <summary>
            Gets the level at which the Pokémon can learn this move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IMove.MaxHits">
            <summary>
            Gets the maximum number of hits the move can deal in one turn.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IMove.RecoilPercentage">
            <summary>
            Gets the percentage of damage dealt as recoil to the user.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IMove.HealingPercentage">
            <summary>
            Gets the percentage of HP healed by the move.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IMove.ValidateMove(PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Validates whether this move is compatible with the given Pokémon.
            </summary>
            <param name="pokemon">The Pokémon to validate against.</param>
            <returns><c>true</c> if the move is compatible with the Pokémon's type and level; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:PokemonGameLib.Interfaces.IPokemon">
            <summary>
            Represents a Pokémon with properties for name, type, level, stats, abilities, and methods to manage its state.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.Name">
            <summary>
            Gets the name of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.Type">
            <summary>
            Gets the type of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.Level">
            <summary>
            Gets the level of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.MaxHP">
            <summary>
            Gets the maximum HP of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.CurrentHP">
            <summary>
            Gets the current HP of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.Attack">
            <summary>
            Gets the attack stat of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.Defense">
            <summary>
            Gets the defense stat of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.Moves">
            <summary>
            Gets the list of moves the Pokémon knows.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.Status">
            <summary>
            Gets the status condition of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Interfaces.IPokemon.Evolutions">
            <summary>
            Gets the list of possible evolutions for the Pokémon.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.LevelUp">
            <summary>
            Levels up the Pokémon, increasing its level and improving its stats.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.TakeDamage(System.Int32)">
            <summary>
            Applies damage to the Pokémon.
            </summary>
            <param name="damage">The amount of damage to apply.</param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.Heal(System.Int32)">
            <summary>
            Heals the Pokémon by a specified amount.
            </summary>
            <param name="amount">The amount to heal.</param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.LowerStat(System.String,System.Int32)">
            <summary>
            Lowers a specific stat of the Pokémon by a specified amount.
            </summary>
            <param name="stat">The stat to lower (e.g., "Attack" or "Defense").</param>
            <param name="amount">The amount to lower the stat by.</param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.IsFainted">
            <summary>
            Determines whether the Pokémon has fainted.
            </summary>
            <returns><c>true</c> if the Pokémon's HP is less than or equal to 0; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.AddMove(PokemonGameLib.Interfaces.IMove)">
            <summary>
            Adds a move to the Pokémon's move list.
            </summary>
            <param name="move">The move to add to the Pokémon's move list.</param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.InflictStatus(PokemonGameLib.Models.Pokemons.StatusCondition)">
            <summary>
            Inflicts a status condition on the Pokémon.
            </summary>
            <param name="status">The status condition to inflict.</param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.ApplyStatusEffects">
            <summary>
            Applies the effects of the current status condition on the Pokémon.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.CureStatus">
            <summary>
            Cures the Pokémon of any status condition.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.SetSleepDuration(System.Int32)">
            <summary>
            Sets the sleep duration when the Pokémon falls asleep.
            </summary>
            <param name="duration">The number of turns the Pokémon will remain asleep.</param>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.CanEvolve">
            <summary>
            Determines whether the Pokémon can evolve based on its current state and evolution criteria.
            </summary>
            <returns><c>true</c> if the Pokémon can evolve; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:PokemonGameLib.Interfaces.IPokemon.Evolve">
            <summary>
            Evolves the Pokémon to its next form if the criteria are met.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Interfaces.ITrainer">
            <summary>
            Represents a trainer in the Pokémon game, managing a team of Pokémon and facilitating interactions during battles.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Interfaces.ITypeEffectivenessService">
            <summary>
            Service for calculating the effectiveness of a move's type against a Pokémon's type.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Interfaces.ITypeEffectivenessService.GetEffectiveness(PokemonGameLib.Models.Pokemons.PokemonType,PokemonGameLib.Models.Pokemons.PokemonType)">
            <summary>
            Gets the effectiveness multiplier of a move's type against a Pokémon's type.
            </summary>
            <param name="attackType">The type of the move being used.</param>
            <param name="defenseType">The type of the defending Pokémon.</param>
            <returns>A multiplier representing the effectiveness.</returns>
        </member>
        <member name="T:PokemonGameLib.Models.Items.Item">
            <summary>
            Represents an item that can be used in battles to affect Pokémon or trainers.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Items.Item.Name">
            <summary>
            Gets the name of the item.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Items.Item.Description">
            <summary>
            Gets the description of the item.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Item.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Items.Item"/> class.
            </summary>
            <param name="name">The name of the item.</param>
            <param name="description">The description of the item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the name or description is null or empty.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Item.Use(PokemonGameLib.Interfaces.ITrainer,PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Uses the item on a target Pokémon.
            </summary>
            <param name="trainer">The trainer using the item.</param>
            <param name="target">The target Pokémon.</param>
        </member>
        <member name="T:PokemonGameLib.Models.Items.Potion">
            <summary>
            Represents a potion item that heals a Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Items.Potion.HealingAmount">
            <summary>
            Gets the healing amount provided by the potion.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Potion.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Items.Potion"/> class.
            </summary>
            <param name="name">The name of the potion.</param>
            <param name="description">The description of the potion.</param>
            <param name="healingAmount">The healing amount provided by the potion.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the healing amount is less than or equal to 0.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Potion.Use(PokemonGameLib.Interfaces.ITrainer,PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Uses the potion to heal a Pokémon.
            </summary>
            <param name="trainer">The trainer using the potion.</param>
            <param name="target">The target Pokémon to heal.</param>
        </member>
        <member name="T:PokemonGameLib.Models.Items.Revive">
            <summary>
            Represents a revive item that restores a fainted Pokémon to partial HP.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Items.Revive.RestorePercentage">
            <summary>
            Gets the percentage of HP that the revive restores.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Revive.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Items.Revive"/> class.
            </summary>
            <param name="name">The name of the revive item.</param>
            <param name="description">The description of the revive item.</param>
            <param name="restorePercentage">The percentage of HP to restore.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the restore percentage is less than or equal to 0 or greater than 100.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Revive.Use(PokemonGameLib.Interfaces.ITrainer,PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Uses the revive item to restore a fainted Pokémon's HP.
            </summary>
            <param name="trainer">The trainer using the revive.</param>
            <param name="target">The fainted Pokémon to restore.</param>
        </member>
        <member name="T:PokemonGameLib.Models.Pokemons.Evolutions.Evolution">
            <summary>
            Represents a Pokémon evolution condition, determining when a Pokémon can evolve.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Evolutions.Evolution.EvolvedFormName">
            <summary>
            Gets the name of the evolved form.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Evolutions.Evolution.RequiredLevel">
            <summary>
            Gets the level required for the evolution to occur.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Evolutions.Evolution.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Pokemons.Evolutions.Evolution"/> class.
            </summary>
            <param name="evolvedFormName">The name of the evolved form.</param>
            <param name="requiredLevel">The level required for evolution.</param>
            <exception cref="T:System.ArgumentException">Thrown if the evolved form name is null or empty, or if the required level is less than 1.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Evolutions.Evolution.CanEvolve(PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Determines if a Pokémon can evolve based on its level.
            </summary>
            <param name="pokemon">The Pokémon to check.</param>
            <returns><c>true</c> if the Pokémon can evolve; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the Pokémon is null.</exception>
        </member>
        <member name="T:PokemonGameLib.Models.Pokemons.Moves.Move">
            <summary>
            Represents a move that a Pokémon can use in battle, defining its properties and special effects.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Moves.Move.Name">
            <summary>
            Gets the name of the move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Moves.Move.Type">
            <summary>
            Gets the type of the move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Moves.Move.Power">
            <summary>
            Gets the power of the move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Moves.Move.Level">
            <summary>
            Gets the level at which the Pokémon can learn this move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Moves.Move.MaxHits">
            <summary>
            Gets the maximum number of hits the move can deal in one turn.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Moves.Move.RecoilPercentage">
            <summary>
            Gets the percentage of damage dealt as recoil to the user.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Moves.Move.HealingPercentage">
            <summary>
            Gets the percentage of HP healed by the move.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Moves.Move.#ctor(System.String,PokemonGameLib.Models.Pokemons.PokemonType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Pokemons.Moves.Move"/> class, defining its properties and special effects.
            </summary>
            <param name="name">The name of the move.</param>
            <param name="type">The type of the move.</param>
            <param name="power">The power of the move.</param>
            <param name="level">The level at which the move can be learned.</param>
            <param name="maxHits">The maximum number of hits the move can deal in one turn. Default is 1.</param>
            <param name="recoilPercentage">The percentage of damage dealt as recoil to the user. Default is 0.</param>
            <param name="healingPercentage">The percentage of HP healed by the move. Default is 0.</param>
            <exception cref="T:System.ArgumentException">Thrown if the move name is null or empty, the type is invalid, the power is negative, or the level is less than 1.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Moves.Move.ValidateMove(PokemonGameLib.Interfaces.IPokemon)">
            <summary>
            Validates whether this move is compatible with the given Pokémon.
            </summary>
            <param name="pokemon">The Pokémon to validate against.</param>
            <returns><c>true</c> if the move is compatible with the Pokémon's type and level; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:PokemonGameLib.Models.Pokemons.Pokemon">
            <summary>
            Represents a Pokémon with properties for name, type, level, stats, abilities, and methods to manage its state.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Name">
            <summary>
            Gets the name of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Type">
            <summary>
            Gets the type of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Level">
            <summary>
            Gets the level of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.MaxHP">
            <summary>
            Gets the maximum HP of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.CurrentHP">
            <summary>
            Gets the current HP of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Attack">
            <summary>
            Gets the attack stat of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Defense">
            <summary>
            Gets the defense stat of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Moves">
            <summary>
            Gets the list of moves the Pokémon knows.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Status">
            <summary>
            Gets the current status condition of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Evolutions">
            <summary>
            Gets the list of possible evolutions for the Pokémon.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.#ctor(System.String,PokemonGameLib.Models.Pokemons.PokemonType,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{PokemonGameLib.Interfaces.IEvolution})">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Pokemons.Pokemon"/> class.
            </summary>
            <param name="name">The name of the Pokémon.</param>
            <param name="type">The type of the Pokémon.</param>
            <param name="level">The level of the Pokémon.</param>
            <param name="maxHp">The maximum HP of the Pokémon.</param>
            <param name="attack">The attack stat of the Pokémon.</param>
            <param name="defense">The defense stat of the Pokémon.</param>
            <param name="abilities">A list of abilities the Pokémon has. Default is an empty list.</param>
            <param name="evolutions">A list of possible evolutions for the Pokémon. Default is an empty list.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the name is null or whitespace.</exception>
            <exception cref="T:System.ArgumentException">Thrown if the type is invalid.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if level, maxHp, attack, or defense are out of valid range.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.LevelUp">
            <summary>
            Levels up the Pokémon, increasing its level and improving its stats.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.TakeDamage(System.Int32)">
            <summary>
            Applies damage to the Pokémon, reducing its current HP.
            </summary>
            <param name="damage">The amount of damage to apply.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.Heal(System.Int32)">
            <summary>
            Heals the Pokémon by the specified amount.
            </summary>
            <param name="amount">The amount to heal.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.LowerStat(System.String,System.Int32)">
            <summary>
            Lowers the specified stat of the Pokémon by the given amount.
            </summary>
            <param name="stat">The stat to lower (e.g., "Attack", "Defense").</param>
            <param name="amount">The amount to lower the stat by.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.IsFainted">
            <summary>
            Determines whether the Pokémon has fainted.
            </summary>
            <returns><c>true</c> if the Pokémon's current HP is 0 or less; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.AddMove(PokemonGameLib.Interfaces.IMove)">
            <summary>
            Adds a move to the Pokémon's move list.
            </summary>
            <param name="move">The move to add.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the move is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the Pokémon already knows 4 moves.</exception>
            <exception cref="T:System.ArgumentException">Thrown if the Pokémon already knows the move, or if the move is not compatible with the Pokémon's type or level.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.RemoveMove(PokemonGameLib.Interfaces.IMove)">
            <summary>
            Removes the specified move from the Pokémon's move set.
            </summary>
            <param name="move">The move to be removed.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="move"/> is <c>null</c>.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.InflictStatus(PokemonGameLib.Models.Pokemons.StatusCondition)">
            <summary>
            Inflicts a status condition on the Pokémon.
            </summary>
            <param name="status">The status condition to inflict.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.ApplyStatusEffects">
            <summary>
            Applies the effects of the current status condition on the Pokémon.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.CureStatus">
            <summary>
            Cures the Pokémon of its current status condition.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.SetSleepDuration(System.Int32)">
            <summary>
            Sets the duration of sleep for the Pokémon.
            </summary>
            <param name="duration">The number of turns the Pokémon will remain asleep.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.CanEvolve">
            <summary>
            Determines whether the Pokémon can evolve based on its current state and evolution criteria.
            </summary>
            <returns><c>true</c> if the Pokémon can evolve; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.Evolve">
            <summary>
            Evolves the Pokémon to its next form if the criteria are met.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Models.Pokemons.PokemonType">
            <summary>
            Represents the different types of Pokémon in the game.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Fire">
            <summary>
            Fire type Pokémon, characterized by their ability to use fire-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Water">
            <summary>
            Water type Pokémon, characterized by their ability to use water-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Grass">
            <summary>
            Grass type Pokémon, characterized by their ability to use grass-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Electric">
            <summary>
            Electric type Pokémon, characterized by their ability to use electric-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Psychic">
            <summary>
            Psychic type Pokémon, characterized by their ability to use psychic-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Ice">
            <summary>
            Ice type Pokémon, characterized by their ability to use ice-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Dragon">
            <summary>
            Dragon type Pokémon, characterized by their ability to use dragon-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Dark">
            <summary>
            Dark type Pokémon, characterized by their ability to use dark-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Fairy">
            <summary>
            Fairy type Pokémon, characterized by their ability to use fairy-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Normal">
            <summary>
            Normal type Pokémon, characterized by their basic abilities and attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Fighting">
            <summary>
            Fighting type Pokémon, characterized by their ability to use fighting-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Flying">
            <summary>
            Flying type Pokémon, characterized by their ability to use flying-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Poison">
            <summary>
            Poison type Pokémon, characterized by their ability to use poison-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Ground">
            <summary>
            Ground type Pokémon, characterized by their ability to use ground-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Rock">
            <summary>
            Rock type Pokémon, characterized by their ability to use rock-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Bug">
            <summary>
            Bug type Pokémon, characterized by their ability to use bug-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Ghost">
            <summary>
            Ghost type Pokémon, characterized by their ability to use ghost-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Steel">
            <summary>
            Steel type Pokémon, characterized by their ability to use steel-based attacks.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Models.Pokemons.StatusCondition">
            <summary>
            Represents status conditions that can affect a Pokémon during battle.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.None">
            <summary>
            No status condition is present.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Paralysis">
            <summary>
            The Pokémon is paralyzed and has a 25% chance of being unable to move each turn.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Sleep">
            <summary>
            The Pokémon is asleep and cannot move for 1-3 turns.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Burn">
            <summary>
            The Pokémon is burned and loses 1/8 of its maximum HP each turn.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Freeze">
            <summary>
            The Pokémon is frozen and cannot move until thawed.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Poison">
            <summary>
            The Pokémon is poisoned and loses 1/8 of its maximum HP each turn.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Services.BattleCalculator">
            <summary>
            Provides methods for calculating various aspects of Pokémon battles.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Services.BattleCalculator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Services.BattleCalculator"/> class.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Services.BattleCalculator.CalculateDamage(PokemonGameLib.Interfaces.IPokemon,PokemonGameLib.Interfaces.IPokemon,PokemonGameLib.Interfaces.IMove)">
            <summary>
            Calculates the damage dealt by a Pokémon move.
            </summary>
            <param name="attacker">The attacking Pokémon.</param>
            <param name="defender">The defending Pokémon.</param>
            <param name="move">The move being used by the attacker.</param>
            <returns>The amount of damage dealt to the defender.</returns>
        </member>
        <member name="M:PokemonGameLib.Services.BattleCalculator.CalculateRecoilDamage(PokemonGameLib.Interfaces.IPokemon,PokemonGameLib.Interfaces.IMove)">
            <summary>
            Calculates the recoil damage that the attacker takes after using a move.
            </summary>
            <param name="attacker">The attacking Pokémon.</param>
            <param name="move">The move that caused recoil.</param>
            <returns>The amount of recoil damage.</returns>
        </member>
        <member name="M:PokemonGameLib.Services.BattleCalculator.GetEffectivenessMessage(System.Double)">
            <summary>
            Gets the message describing the effectiveness of the move.
            </summary>
            <param name="effectiveness">The effectiveness multiplier.</param>
            <returns>A string message describing the effectiveness.</returns>
        </member>
        <member name="M:PokemonGameLib.Services.BattleCalculator.IsCriticalHit">
            <summary>
            Determines if the move is a critical hit based on the critical hit chance.
            </summary>
            <returns>True if the move is a critical hit; otherwise, false.</returns>
        </member>
        <member name="M:PokemonGameLib.Services.BattleCalculator.CalculateHealingAmount(PokemonGameLib.Interfaces.IPokemon,PokemonGameLib.Interfaces.IMove)">
            <summary>
            Calculates the amount of HP a Pokémon should heal based on the move used.
            </summary>
            <param name="attacker">The Pokémon using the healing move.</param>
            <param name="move">The move being used that has a healing effect.</param>
            <returns>The amount of HP the Pokémon should recover.</returns>
        </member>
        <member name="T:PokemonGameLib.Services.TypeEffectivenessService">
            <summary>
            Provides methods to determine type effectiveness in Pokémon battles.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Services.TypeEffectivenessService.Instance">
            <summary>
            Gets the singleton instance of the TypeEffectivenessService.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Services.TypeEffectivenessService._effectiveness">
            <summary>
            A dictionary that maps a tuple of attacking and defending Pokémon types to their effectiveness multiplier.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Services.TypeEffectivenessService.#ctor">
            <summary>
            Private constructor to prevent external instantiation.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Services.TypeEffectivenessService.GetEffectiveness(PokemonGameLib.Models.Pokemons.PokemonType,PokemonGameLib.Models.Pokemons.PokemonType)">
            <summary>
            Gets the effectiveness of an attacking Pokémon's move type against a defending Pokémon's type.
            </summary>
            <param name="attackType">The type of the attacking move.</param>
            <param name="defenseType">The type of the defending Pokémon.</param>
            <returns>A multiplier representing the effectiveness of the attack.</returns>
        </member>
        <member name="M:PokemonGameLib.Services.TypeEffectivenessService.GetEffectivenessDictionary">
            <summary>
            Gets the type effectiveness dictionary.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Utilities.RandomNumberGenerator">
            <summary>
            Provides methods for generating random numbers.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Utilities.ValidationUtility">
            <summary>
            Provides utility methods for validating Pokémon game objects.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Utilities.ValidationUtility.ValidatePokemon(PokemonGameLib.Interfaces.IPokemon,System.String)">
            <summary>
            Ensures that a Pokémon is not null or fainted.
            </summary>
            <param name="pokemon">The Pokémon to validate.</param>
            <param name="parameterName">The name of the parameter being validated.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the Pokémon is null.</exception>
            <exception cref="T:PokemonGameLib.Exceptions.PokemonFaintedException">Thrown if the Pokémon has fainted.</exception>
        </member>
        <member name="M:PokemonGameLib.Utilities.ValidationUtility.ValidateMove(PokemonGameLib.Interfaces.IPokemon,PokemonGameLib.Interfaces.IMove)">
            <summary>
            Ensures that a move is valid for a Pokémon.
            </summary>
            <param name="attacker">The Pokémon to validate the move against.</param>
            <param name="move">The move to validate.</param>
            <exception cref="T:PokemonGameLib.Exceptions.InvalidMoveException">Thrown if the move is invalid for the Pokémon.</exception>
        </member>
    </members>
</doc>
