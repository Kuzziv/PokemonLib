<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PokemonGameLib</name>
    </assembly>
    <members>
        <member name="T:PokemonGameLib.Models.Abilities.Ability">
            <summary>
            Represents an ability that a Pokémon can have, providing special effects or benefits in battle.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Abilities.Ability.Name">
            <summary>
            Gets the name of the ability.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Abilities.Ability.Description">
            <summary>
            Gets the description of the ability.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Abilities.Ability.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Abilities.Ability"/> class.
            </summary>
            <param name="name">The name of the ability.</param>
            <param name="description">The description of the ability.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Abilities.Ability.ApplyEffect(PokemonGameLib.Models.Battles.Battle,PokemonGameLib.Models.Pokemons.Pokemon,PokemonGameLib.Models.Pokemons.Pokemon)">
            <summary>
            Applies the ability effect during a battle.
            </summary>
            <param name="battle">The current battle instance.</param>
            <param name="user">The Pokémon using the ability.</param>
            <param name="target">The target Pokémon of the ability.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the user is null.</exception>
        </member>
        <member name="T:PokemonGameLib.Models.Battles.Battle">
            <summary>
            Represents a Pokémon battle between two trainers, handling battle mechanics and interactions.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Battles.Battle.FirstTrainer">
            <summary>
            Gets the first trainer in the battle.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Battles.Battle.SecondTrainer">
            <summary>
            Gets the second trainer in the battle.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Battles.Battle.AttackingTrainer">
            <summary>
            Gets the current attacking trainer based on the turn.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Battles.Battle.DefendingTrainer">
            <summary>
            Gets the current defending trainer based on the turn.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Battles.Battle.Attacker">
            <summary>
            Gets the current attacking Pokémon based on the turn.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Battles.Battle.Defender">
            <summary>
            Gets the current defending Pokémon based on the turn.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Battles.Battle.#ctor(PokemonGameLib.Models.Trainers.Trainer,PokemonGameLib.Models.Trainers.Trainer)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Battles.Battle"/> class.
            </summary>
            <param name="firstTrainer">The first trainer in the battle.</param>
            <param name="secondTrainer">The second trainer in the battle.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when either trainer is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when either trainer has no valid Pokémon to battle.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Battles.Battle.PerformAttack(PokemonGameLib.Models.Moves.Move)">
            <summary>
            Performs an attack using the specified move.
            </summary>
            <param name="move">The move to be used for the attack.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the move is not valid for the attacker.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Battles.Battle.CalculateEffectiveness(PokemonGameLib.Models.Pokemons.PokemonType,PokemonGameLib.Models.Pokemons.PokemonType)">
            <summary>
            Calculates the effectiveness of a move based on types.
            </summary>
            <param name="moveType">The type of the move.</param>
            <param name="pokemonType">The type of the defending Pokémon.</param>
            <returns>The effectiveness multiplier.</returns>
        </member>
        <member name="M:PokemonGameLib.Models.Battles.Battle.CalculateDamage(System.Int32,System.Int32,System.Int32,System.Double,PokemonGameLib.Models.Pokemons.PokemonType)">
            <summary>
            Calculates the damage dealt by a move, incorporating factors like effectiveness, STAB (Same Type Attack Bonus), 
            critical hits, and a random factor to simulate variability in battle outcomes.
            </summary>
            <param name="movePower">The base power of the move being used, which determines the move's strength.</param>
            <param name="attackerAttack">The attack stat of the attacking Pokémon, affecting the potency of physical attacks.</param>
            <param name="defenderDefense">The defense stat of the defending Pokémon, reducing damage from incoming physical attacks.</param>
            <param name="effectiveness">
            A multiplier representing the effectiveness of the move against the defender's type. 
            Values greater than 1.0 indicate super effectiveness, values less than 1.0 indicate reduced effectiveness, 
            and a value of 0 means no effect.
            </param>
            <param name="moveType">The type of the move being used, which interacts with the defender's type to determine effectiveness.</param>
            <returns>The total calculated damage to be dealt to the defender, after applying all modifiers.</returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown when either the attacker or the defender Pokémon is null, indicating a misconfiguration of the battle state.
            </exception>
        </member>
        <member name="M:PokemonGameLib.Models.Battles.Battle.EffectivenessMessage(System.Double)">
            <summary>
            Provides a message based on the effectiveness of the move.
            </summary>
            <param name="effectiveness">The effectiveness multiplier.</param>
            <returns>A string message describing the effectiveness.</returns>
        </member>
        <member name="M:PokemonGameLib.Models.Battles.Battle.DetermineBattleResult">
            <summary>
            Determines the result of the battle.
            </summary>
            <returns>A string describing the result of the battle.</returns>
        </member>
        <member name="M:PokemonGameLib.Models.Battles.Battle.SwitchPokemon(PokemonGameLib.Models.Trainers.Trainer,PokemonGameLib.Models.Pokemons.Pokemon)">
            <summary>
            Switches the current attacking Pokémon to a new Pokémon.
            </summary>
            <param name="trainer">The trainer requesting the switch.</param>
            <param name="newPokemon">The new Pokémon to switch to.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when attempting to switch to a fainted Pokémon or a Pokémon not owned by the trainer.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Battles.Battle.UseItem(PokemonGameLib.Models.Items.Item,PokemonGameLib.Models.Trainers.Trainer,PokemonGameLib.Models.Pokemons.Pokemon)">
            <summary>
            Uses an item during the battle.
            </summary>
            <param name="item">The item to be used.</param>
            <param name="trainer">The trainer using the item.</param>
            <param name="target">The target Pokémon of the item.</param>
        </member>
        <member name="T:PokemonGameLib.Models.Evolutions.Evolution">
            <summary>
            Represents a Pokémon evolution condition, determining when a Pokémon can evolve.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Evolutions.Evolution.EvolvedFormName">
            <summary>
            Gets the name of the evolved form.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Evolutions.Evolution.RequiredLevel">
            <summary>
            Gets the level required for the evolution to occur.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Evolutions.Evolution.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Evolutions.Evolution"/> class.
            </summary>
            <param name="evolvedFormName">The name of the evolved form.</param>
            <param name="requiredLevel">The level required for evolution.</param>
            <exception cref="T:System.ArgumentException">Thrown if the evolved form name is null or empty, or if the required level is less than 1.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Evolutions.Evolution.CanEvolve(PokemonGameLib.Models.Pokemons.Pokemon)">
            <summary>
            Determines if a Pokémon can evolve based on its level.
            </summary>
            <param name="pokemon">The Pokémon to check.</param>
            <returns><c>true</c> if the Pokémon can evolve; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the Pokémon is null.</exception>
        </member>
        <member name="T:PokemonGameLib.Models.Items.Item">
            <summary>
            Represents an item that can be used in battles to affect Pokémon or trainers.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Items.Item.Name">
            <summary>
            Gets the name of the item.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Items.Item.Description">
            <summary>
            Gets the description of the item.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Item.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Items.Item"/> class.
            </summary>
            <param name="name">The name of the item.</param>
            <param name="description">The description of the item.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Item.Use(PokemonGameLib.Models.Trainers.Trainer,PokemonGameLib.Models.Pokemons.Pokemon)">
            <summary>
            Uses the item on a target Pokémon.
            </summary>
            <param name="trainer">The trainer using the item.</param>
            <param name="target">The target Pokémon.</param>
        </member>
        <member name="T:PokemonGameLib.Models.Items.Potion">
            <summary>
            Represents a potion item that heals a Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Items.Potion.HealingAmount">
            <summary>
            Gets the healing amount provided by the potion.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Potion.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Items.Potion"/> class.
            </summary>
            <param name="name">The name of the potion.</param>
            <param name="description">The description of the potion.</param>
            <param name="healingAmount">The healing amount provided by the potion.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Items.Potion.Use(PokemonGameLib.Models.Trainers.Trainer,PokemonGameLib.Models.Pokemons.Pokemon)">
            <summary>
            Uses the potion to heal a Pokémon.
            </summary>
            <param name="trainer">The trainer using the potion.</param>
            <param name="target">The target Pokémon to heal.</param>
        </member>
        <member name="T:PokemonGameLib.Models.Moves.Move">
            <summary>
            Represents a move that a Pokémon can use in battle, defining its properties and special effects.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Moves.Move.Name">
            <summary>
            Gets the name of the move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Moves.Move.Type">
            <summary>
            Gets the type of the move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Moves.Move.Power">
            <summary>
            Gets the power of the move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Moves.Move.Level">
            <summary>
            Gets the level at which the Pokémon can learn this move.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Moves.Move.MaxHits">
            <summary>
            Gets the maximum number of hits the move can deal in one turn.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Moves.Move.RecoilPercentage">
            <summary>
            Gets the percentage of damage dealt as recoil to the user.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Moves.Move.HealingPercentage">
            <summary>
            Gets the percentage of HP healed by the move.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Moves.Move.#ctor(System.String,PokemonGameLib.Models.Pokemons.PokemonType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Moves.Move"/> class, defining its properties and special effects.
            </summary>
            <param name="name">The name of the move.</param>
            <param name="type">The type of the move.</param>
            <param name="power">The power of the move.</param>
            <param name="level">The level at which the move can be learned.</param>
            <param name="maxHits">The maximum number of hits the move can deal in one turn.</param>
            <param name="recoilPercentage">The percentage of damage dealt as recoil to the user.</param>
            <param name="healingPercentage">The percentage of HP healed by the move.</param>
            <exception cref="T:System.ArgumentException">Thrown if the move name is null or empty, the type is not a valid <see cref="T:PokemonGameLib.Models.Pokemons.PokemonType"/>, the power is negative, or the level is less than 1.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Moves.Move.IsCompatibleWith(PokemonGameLib.Models.Pokemons.PokemonType,System.Int32)">
            <summary>
            Determines whether this move is compatible with a given Pokémon type and level.
            </summary>
            <param name="pokemonType">The type of the Pokémon.</param>
            <param name="pokemonLevel">The level of the Pokémon.</param>
            <returns><c>true</c> if the move type is compatible with the Pokémon type and the Pokémon's level is sufficient to learn the move; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:PokemonGameLib.Models.Pokemons.Pokemon">
            <summary>
            Represents a Pokémon with properties for name, type, level, stats, abilities, and methods to manage its state.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Name">
            <summary>
            Gets the name of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Type">
            <summary>
            Gets the type of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Level">
            <summary>
            Gets the level of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.MaxHP">
            <summary>
            Gets the maximum HP of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.CurrentHP">
            <summary>
            Gets the current HP of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Attack">
            <summary>
            Gets the attack stat of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Defense">
            <summary>
            Gets the defense stat of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Moves">
            <summary>
            Gets the list of moves the Pokémon knows.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Abilities">
            <summary>
            Gets the list of abilities the Pokémon has.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Status">
            <summary>
            Gets the status condition of the Pokémon.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Pokemons.Pokemon.Evolutions">
            <summary>
            Gets the list of possible evolutions for the Pokémon.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.#ctor(System.String,PokemonGameLib.Models.Pokemons.PokemonType,System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{PokemonGameLib.Models.Abilities.Ability},System.Collections.Generic.List{PokemonGameLib.Models.Evolutions.Evolution})">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Pokemons.Pokemon"/> class.
            </summary>
            <param name="name">The name of the Pokémon.</param>
            <param name="type">The type of the Pokémon.</param>
            <param name="level">The level of the Pokémon.</param>
            <param name="maxHp">The maximum HP of the Pokémon.</param>
            <param name="attack">The attack stat of the Pokémon.</param>
            <param name="defense">The defense stat of the Pokémon.</param>
            <param name="abilities">The list of abilities the Pokémon has.</param>
            <param name="evolutions">The list of possible evolutions for the Pokémon.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.LevelUp">
            <summary>
            Levels up the Pokémon, increasing its level and improving its stats.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.TakeDamage(System.Int32)">
            <summary>
            Applies damage to the Pokémon.
            </summary>
            <param name="damage">The amount of damage to apply.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.Heal(System.Int32)">
            <summary>
            Heals the Pokémon by a specified amount.
            </summary>
            <param name="amount">The amount to heal.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.LowerStat(System.String,System.Int32)">
            <summary>
            Lowers a specific stat of the Pokémon by a specified amount.
            </summary>
            <param name="stat">The stat to lower (e.g., "Attack" or "Defense").</param>
            <param name="amount">The amount to lower the stat by.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.IsFainted">
            <summary>
            Determines whether the Pokémon has fainted.
            </summary>
            <returns><c>true</c> if the Pokémon's HP is less than or equal to 0; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.AddMove(PokemonGameLib.Models.Moves.Move)">
            <summary>
            Adds a move to the Pokémon's move list.
            </summary>
            <param name="move">The move to add to the Pokémon's move list.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the move is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the Pokémon already knows the maximum number of moves.</exception>
            <exception cref="T:System.ArgumentException">Thrown if the move is already known by the Pokémon, is not compatible with the Pokémon's type, or is not compatible with the Pokémon's level.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.InflictStatus(PokemonGameLib.Models.Pokemons.StatusCondition)">
            <summary>
            Inflicts a status condition on the Pokémon.
            </summary>
            <param name="status">The status condition to inflict.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.ApplyStatusEffects">
            <summary>
            Applies the effects of the current status condition on the Pokémon.
            This method should be called at the end of each turn to process ongoing status effects.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.CureStatus">
            <summary>
            Cures the Pokémon of any status condition.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.SetSleepDuration(System.Int32)">
            <summary>
            Sets the sleep duration when the Pokémon falls asleep.
            </summary>
            <param name="duration">The number of turns the Pokémon will remain asleep.</param>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.CanEvolve">
            <summary>
            Determines whether the Pokémon can evolve based on its current state and evolution criteria.
            </summary>
            <returns><c>true</c> if the Pokémon can evolve; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:PokemonGameLib.Models.Pokemons.Pokemon.Evolve">
            <summary>
            Evolves the Pokémon to its next form if the criteria are met.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Models.Pokemons.PokemonType">
            <summary>
            Represents the different types of Pokémon in the game.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Fire">
            <summary>
            Fire type Pokémon, characterized by their ability to use fire-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Water">
            <summary>
            Water type Pokémon, characterized by their ability to use water-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Grass">
            <summary>
            Grass type Pokémon, characterized by their ability to use grass-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Electric">
            <summary>
            Electric type Pokémon, characterized by their ability to use electric-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Psychic">
            <summary>
            Psychic type Pokémon, characterized by their ability to use psychic-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Ice">
            <summary>
            Ice type Pokémon, characterized by their ability to use ice-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Dragon">
            <summary>
            Dragon type Pokémon, characterized by their ability to use dragon-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Dark">
            <summary>
            Dark type Pokémon, characterized by their ability to use dark-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Fairy">
            <summary>
            Fairy type Pokémon, characterized by their ability to use fairy-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Normal">
            <summary>
            Normal type Pokémon, characterized by their basic abilities and attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Fighting">
            <summary>
            Fighting type Pokémon, characterized by their ability to use fighting-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Flying">
            <summary>
            Flying type Pokémon, characterized by their ability to use flying-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Poison">
            <summary>
            Poison type Pokémon, characterized by their ability to use poison-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Ground">
            <summary>
            Ground type Pokémon, characterized by their ability to use ground-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Rock">
            <summary>
            Rock type Pokémon, characterized by their ability to use rock-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Bug">
            <summary>
            Bug type Pokémon, characterized by their ability to use bug-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Ghost">
            <summary>
            Ghost type Pokémon, characterized by their ability to use ghost-based attacks.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.PokemonType.Steel">
            <summary>
            Steel type Pokémon, characterized by their ability to use steel-based attacks.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Models.Pokemons.StatusCondition">
            <summary>
            Represents status conditions that can affect a Pokémon during battle.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.None">
            <summary>
            No status condition is present.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Paralysis">
            <summary>
            The Pokémon is paralyzed and has a 25% chance of being unable to move each turn.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Sleep">
            <summary>
            The Pokémon is asleep and cannot move for 1-3 turns.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Burn">
            <summary>
            The Pokémon is burned and loses 1/8 of its maximum HP each turn.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Freeze">
            <summary>
            The Pokémon is frozen and cannot move until thawed.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Models.Pokemons.StatusCondition.Poison">
            <summary>
            The Pokémon is poisoned and loses 1/8 of its maximum HP each turn.
            </summary>
        </member>
        <member name="T:PokemonGameLib.Models.Trainers.Trainer">
            <summary>
            Represents a Trainer in the Pokémon game, managing a team of Pokémon and facilitating interactions during battles.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Trainers.Trainer.Pokemons">
            <summary>
            Gets the list of Pokemons owned by the Trainer.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Trainers.Trainer.Name">
            <summary>
            Gets or sets the name of the Trainer.
            </summary>
        </member>
        <member name="P:PokemonGameLib.Models.Trainers.Trainer.CurrentPokemon">
            <summary>
            Gets or sets the current Pokémon of the Trainer.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Models.Trainers.Trainer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PokemonGameLib.Models.Trainers.Trainer"/> class with the specified name.
            </summary>
            <param name="name">The name of the Trainer.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the name is null.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Trainers.Trainer.AddPokemon(PokemonGameLib.Models.Pokemons.Pokemon)">
            <summary>
            Adds a Pokémon to the Trainer's list of Pokemons.
            </summary>
            <param name="pokemon">The Pokémon to be added.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the Pokémon is null.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Trainers.Trainer.HasValidPokemon">
            <summary>
            Determines whether the Trainer has any Pokémon that are not fainted.
            </summary>
            <returns>
            <c>true</c> if the Trainer has at least one Pokémon that is not fainted; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PokemonGameLib.Models.Trainers.Trainer.RemovePokemon(PokemonGameLib.Models.Pokemons.Pokemon)">
            <summary>
            Removes a Pokémon from the Trainer's list of Pokemons.
            </summary>
            <param name="pokemon">The Pokémon to remove.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the Pokémon is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the Pokémon is not in the Trainer's list.</exception>
        </member>
        <member name="M:PokemonGameLib.Models.Trainers.Trainer.SwitchPokemon(PokemonGameLib.Models.Pokemons.Pokemon)">
            <summary>
            Switches the Trainer's current Pokémon to the specified new Pokémon.
            </summary>
            <param name="newPokemon">The new Pokémon to switch to.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the new Pokémon is fainted or not owned by the Trainer.</exception>
        </member>
        <member name="T:PokemonGameLib.Services.TypeEffectiveness">
            <summary>
            Provides methods to determine type effectiveness in Pokémon battles.
            </summary>
        </member>
        <member name="F:PokemonGameLib.Services.TypeEffectiveness.effectiveness">
            <summary>
            A dictionary that maps a tuple of attacking and defending Pokémon types to their effectiveness multiplier.
            </summary>
        </member>
        <member name="M:PokemonGameLib.Services.TypeEffectiveness.GetEffectiveness(PokemonGameLib.Models.Pokemons.PokemonType,PokemonGameLib.Models.Pokemons.PokemonType)">
            <summary>
            Gets the effectiveness of an attacking Pokémon's move type against a defending Pokémon's type.
            </summary>
            <param name="attackType">The type of the attacking move.</param>
            <param name="defenseType">The type of the defending Pokémon.</param>
            <returns>A multiplier representing the effectiveness of the attack.</returns>
        </member>
        <member name="M:PokemonGameLib.Services.TypeEffectiveness.GetEffectivenessDictionary">
            <summary>
            Gets the type effectiveness dictionary.
            </summary>
        </member>
    </members>
</doc>
